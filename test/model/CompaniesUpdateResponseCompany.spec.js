/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FreeeAccountingClient);
  }
}(this, function(expect, FreeeAccountingClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompaniesUpdateResponseCompany', function() {
    it('should create an instance of CompaniesUpdateResponseCompany', function() {
      // uncomment below and update the code to test CompaniesUpdateResponseCompany
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be.a(FreeeAccountingClient.CompaniesUpdateResponseCompany);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property taxAtSourceCalcType (base name: "tax_at_source_calc_type")', function() {
      // uncomment below and update the code to test the property taxAtSourceCalcType
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property corporateNumber (base name: "corporate_number")', function() {
      // uncomment below and update the code to test the property corporateNumber
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property txnNumberFormat (base name: "txn_number_format")', function() {
      // uncomment below and update the code to test the property txnNumberFormat
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property defaultWalletAccountId (base name: "default_wallet_account_id")', function() {
      // uncomment below and update the code to test the property defaultWalletAccountId
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property privateSettlement (base name: "private_settlement")', function() {
      // uncomment below and update the code to test the property privateSettlement
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property minusFormat (base name: "minus_format")', function() {
      // uncomment below and update the code to test the property minusFormat
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property phone1 (base name: "phone1")', function() {
      // uncomment below and update the code to test the property phone1
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property zipcode (base name: "zipcode")', function() {
      // uncomment below and update the code to test the property zipcode
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property prefectureCode (base name: "prefecture_code")', function() {
      // uncomment below and update the code to test the property prefectureCode
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property streetName1 (base name: "street_name1")', function() {
      // uncomment below and update the code to test the property streetName1
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property streetName2 (base name: "street_name2")', function() {
      // uncomment below and update the code to test the property streetName2
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property invoiceLayout (base name: "invoice_layout")', function() {
      // uncomment below and update the code to test the property invoiceLayout
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property invoiceStyle (base name: "invoice_style")', function() {
      // uncomment below and update the code to test the property invoiceStyle
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property amountFraction (base name: "amount_fraction")', function() {
      // uncomment below and update the code to test the property amountFraction
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property industryClass (base name: "industry_class")', function() {
      // uncomment below and update the code to test the property industryClass
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property industryCode (base name: "industry_code")', function() {
      // uncomment below and update the code to test the property industryCode
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property workflowSetting (base name: "workflow_setting")', function() {
      // uncomment below and update the code to test the property workflowSetting
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

    it('should have the property fiscalYears (base name: "fiscal_years")', function() {
      // uncomment below and update the code to test the property fiscalYears
      //var instance = new FreeeAccountingClient.CompaniesUpdateResponseCompany();
      //expect(instance).to.be();
    });

  });

}));
