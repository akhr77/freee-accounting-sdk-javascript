/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FreeeAccountingClient);
  }
}(this, function(expect, FreeeAccountingClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FreeeAccountingClient.InvoicesUpdateParams();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoicesUpdateParams', function() {
    it('should create an instance of InvoicesUpdateParams', function() {
      // uncomment below and update the code to test InvoicesUpdateParams
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be.a(FreeeAccountingClient.InvoicesUpdateParams);
    });

    it('should have the property companyId (base name: "company_id")', function() {
      // uncomment below and update the code to test the property companyId
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property issueDate (base name: "issue_date")', function() {
      // uncomment below and update the code to test the property issueDate
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerId (base name: "partner_id")', function() {
      // uncomment below and update the code to test the property partnerId
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "invoice_number")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "due_date")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property bookingDate (base name: "booking_date")', function() {
      // uncomment below and update the code to test the property bookingDate
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property invoiceStatus (base name: "invoice_status")', function() {
      // uncomment below and update the code to test the property invoiceStatus
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerName (base name: "partner_name")', function() {
      // uncomment below and update the code to test the property partnerName
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerTitle (base name: "partner_title")', function() {
      // uncomment below and update the code to test the property partnerTitle
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerContactInfo (base name: "partner_contact_info")', function() {
      // uncomment below and update the code to test the property partnerContactInfo
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "company_name")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyZipcode (base name: "company_zipcode")', function() {
      // uncomment below and update the code to test the property companyZipcode
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyPrefectureCode (base name: "company_prefecture_code")', function() {
      // uncomment below and update the code to test the property companyPrefectureCode
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyAddress1 (base name: "company_address1")', function() {
      // uncomment below and update the code to test the property companyAddress1
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyAddress2 (base name: "company_address2")', function() {
      // uncomment below and update the code to test the property companyAddress2
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property companyContactInfo (base name: "company_contact_info")', function() {
      // uncomment below and update the code to test the property companyContactInfo
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "payment_type")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property paymentBankInfo (base name: "payment_bank_info")', function() {
      // uncomment below and update the code to test the property paymentBankInfo
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property useVirtualTransferAccount (base name: "use_virtual_transfer_account")', function() {
      // uncomment below and update the code to test the property useVirtualTransferAccount
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property invoiceLayout (base name: "invoice_layout")', function() {
      // uncomment below and update the code to test the property invoiceLayout
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property taxEntryMethod (base name: "tax_entry_method")', function() {
      // uncomment below and update the code to test the property taxEntryMethod
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

    it('should have the property invoiceContents (base name: "invoice_contents")', function() {
      // uncomment below and update the code to test the property invoiceContents
      //var instance = new FreeeAccountingClient.InvoicesUpdateParams();
      //expect(instance).to.be();
    });

  });

}));
