/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FreeeAccountingClient);
  }
}(this, function(expect, FreeeAccountingClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersCapabilitiesResponse', function() {
    it('should create an instance of UsersCapabilitiesResponse', function() {
      // uncomment below and update the code to test UsersCapabilitiesResponse
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be.a(FreeeAccountingClient.UsersCapabilitiesResponse);
    });

    it('should have the property walletTxns (base name: "wallet_txns")', function() {
      // uncomment below and update the code to test the property walletTxns
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property deals (base name: "deals")', function() {
      // uncomment below and update the code to test the property deals
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property transfers (base name: "transfers")', function() {
      // uncomment below and update the code to test the property transfers
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property docs (base name: "docs")', function() {
      // uncomment below and update the code to test the property docs
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property docPostings (base name: "doc_postings")', function() {
      // uncomment below and update the code to test the property docPostings
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property receipts (base name: "receipts")', function() {
      // uncomment below and update the code to test the property receipts
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property receiptStreamEditor (base name: "receipt_stream_editor")', function() {
      // uncomment below and update the code to test the property receiptStreamEditor
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property expenseApplications (base name: "expense_applications")', function() {
      // uncomment below and update the code to test the property expenseApplications
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property spreadsheets (base name: "spreadsheets")', function() {
      // uncomment below and update the code to test the property spreadsheets
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property paymentRequests (base name: "payment_requests")', function() {
      // uncomment below and update the code to test the property paymentRequests
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestForms (base name: "request_forms")', function() {
      // uncomment below and update the code to test the property requestForms
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property approvalRequests (base name: "approval_requests")', function() {
      // uncomment below and update the code to test the property approvalRequests
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reports (base name: "reports")', function() {
      // uncomment below and update the code to test the property reports
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsIncomeExpense (base name: "reports_income_expense")', function() {
      // uncomment below and update the code to test the property reportsIncomeExpense
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsReceivables (base name: "reports_receivables")', function() {
      // uncomment below and update the code to test the property reportsReceivables
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsPayables (base name: "reports_payables")', function() {
      // uncomment below and update the code to test the property reportsPayables
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsCashBalance (base name: "reports_cash_balance")', function() {
      // uncomment below and update the code to test the property reportsCashBalance
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsCrosstabs (base name: "reports_crosstabs")', function() {
      // uncomment below and update the code to test the property reportsCrosstabs
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsGeneralLedgers (base name: "reports_general_ledgers")', function() {
      // uncomment below and update the code to test the property reportsGeneralLedgers
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsPl (base name: "reports_pl")', function() {
      // uncomment below and update the code to test the property reportsPl
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsBs (base name: "reports_bs")', function() {
      // uncomment below and update the code to test the property reportsBs
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsJournals (base name: "reports_journals")', function() {
      // uncomment below and update the code to test the property reportsJournals
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsManagementsPlanning (base name: "reports_managements_planning")', function() {
      // uncomment below and update the code to test the property reportsManagementsPlanning
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportsManagementsNavigation (base name: "reports_managements_navigation")', function() {
      // uncomment below and update the code to test the property reportsManagementsNavigation
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property manualJournals (base name: "manual_journals")', function() {
      // uncomment below and update the code to test the property manualJournals
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property fixedAssets (base name: "fixed_assets")', function() {
      // uncomment below and update the code to test the property fixedAssets
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property inventoryRefreshes (base name: "inventory_refreshes")', function() {
      // uncomment below and update the code to test the property inventoryRefreshes
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property bizAllocations (base name: "biz_allocations")', function() {
      // uncomment below and update the code to test the property bizAllocations
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property paymentRecords (base name: "payment_records")', function() {
      // uncomment below and update the code to test the property paymentRecords
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property annualReports (base name: "annual_reports")', function() {
      // uncomment below and update the code to test the property annualReports
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property taxReports (base name: "tax_reports")', function() {
      // uncomment below and update the code to test the property taxReports
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property consumptionEntries (base name: "consumption_entries")', function() {
      // uncomment below and update the code to test the property consumptionEntries
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property taxReturn (base name: "tax_return")', function() {
      // uncomment below and update the code to test the property taxReturn
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property accountItemStatements (base name: "account_item_statements")', function() {
      // uncomment below and update the code to test the property accountItemStatements
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property monthEnd (base name: "month_end")', function() {
      // uncomment below and update the code to test the property monthEnd
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property yearEnd (base name: "year_end")', function() {
      // uncomment below and update the code to test the property yearEnd
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property walletables (base name: "walletables")', function() {
      // uncomment below and update the code to test the property walletables
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property companies (base name: "companies")', function() {
      // uncomment below and update the code to test the property companies
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property invitations (base name: "invitations")', function() {
      // uncomment below and update the code to test the property invitations
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property signInLogs (base name: "sign_in_logs")', function() {
      // uncomment below and update the code to test the property signInLogs
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property backups (base name: "backups")', function() {
      // uncomment below and update the code to test the property backups
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property openingBalances (base name: "opening_balances")', function() {
      // uncomment below and update the code to test the property openingBalances
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property systemConversion (base name: "system_conversion")', function() {
      // uncomment below and update the code to test the property systemConversion
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property resets (base name: "resets")', function() {
      // uncomment below and update the code to test the property resets
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property partners (base name: "partners")', function() {
      // uncomment below and update the code to test the property partners
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property sections (base name: "sections")', function() {
      // uncomment below and update the code to test the property sections
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property accountItems (base name: "account_items")', function() {
      // uncomment below and update the code to test the property accountItems
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property userMatchers (base name: "user_matchers")', function() {
      // uncomment below and update the code to test the property userMatchers
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property dealTemplates (base name: "deal_templates")', function() {
      // uncomment below and update the code to test the property dealTemplates
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property manualJournalTemplates (base name: "manual_journal_templates")', function() {
      // uncomment below and update the code to test the property manualJournalTemplates
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property costAllocations (base name: "cost_allocations")', function() {
      // uncomment below and update the code to test the property costAllocations
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property approvalFlowRoutes (base name: "approval_flow_routes")', function() {
      // uncomment below and update the code to test the property approvalFlowRoutes
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property expenseApplicationTemplates (base name: "expense_application_templates")', function() {
      // uncomment below and update the code to test the property expenseApplicationTemplates
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property workflows (base name: "workflows")', function() {
      // uncomment below and update the code to test the property workflows
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthApplications (base name: "oauth_applications")', function() {
      // uncomment below and update the code to test the property oauthApplications
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthAuthorizations (base name: "oauth_authorizations")', function() {
      // uncomment below and update the code to test the property oauthAuthorizations
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountantStaffUsers (base name: "bank_accountant_staff_users")', function() {
      // uncomment below and update the code to test the property bankAccountantStaffUsers
      //var instance = new FreeeAccountingClient.UsersCapabilitiesResponse();
      //expect(instance).to.be();
    });

  });

}));
