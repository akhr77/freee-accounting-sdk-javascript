/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FreeeAccountingClient);
  }
}(this, function(expect, FreeeAccountingClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FreeeAccountingClient.PartnerParams();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PartnerParams', function() {
    it('should create an instance of PartnerParams', function() {
      // uncomment below and update the code to test PartnerParams
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be.a(FreeeAccountingClient.PartnerParams);
    });

    it('should have the property companyId (base name: "company_id")', function() {
      // uncomment below and update the code to test the property companyId
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property shortcut1 (base name: "shortcut1")', function() {
      // uncomment below and update the code to test the property shortcut1
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property shortcut2 (base name: "shortcut2")', function() {
      // uncomment below and update the code to test the property shortcut2
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property longName (base name: "long_name")', function() {
      // uncomment below and update the code to test the property longName
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property nameKana (base name: "name_kana")', function() {
      // uncomment below and update the code to test the property nameKana
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property defaultTitle (base name: "default_title")', function() {
      // uncomment below and update the code to test the property defaultTitle
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property contactName (base name: "contact_name")', function() {
      // uncomment below and update the code to test the property contactName
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property addressAttributes (base name: "address_attributes")', function() {
      // uncomment below and update the code to test the property addressAttributes
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerDocSettingAttributes (base name: "partner_doc_setting_attributes")', function() {
      // uncomment below and update the code to test the property partnerDocSettingAttributes
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

    it('should have the property partnerBankAccountAttributes (base name: "partner_bank_account_attributes")', function() {
      // uncomment below and update the code to test the property partnerBankAccountAttributes
      //var instance = new FreeeAccountingClient.PartnerParams();
      //expect(instance).to.be();
    });

  });

}));
