/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FreeeAccountingClient) {
      root.FreeeAccountingClient = {};
    }
    root.FreeeAccountingClient.SegmentTag = factory(root.FreeeAccountingClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SegmentTag model module.
   * @module model/SegmentTag
   * @version v0.0.2
   */

  /**
   * Constructs a new <code>SegmentTag</code>.
   * @alias module:model/SegmentTag
   * @class
   * @param id {Number} セグメントタグID
   * @param name {String} セグメントタグ
   * @param description {String} 備考
   * @param shortcut1 {String} ショートカット１ (20文字以内)
   * @param shortcut2 {String} ショートカット２ (20文字以内)
   */
  var exports = function(id, name, description, shortcut1, shortcut2) {
    var _this = this;

    _this['id'] = id;
    _this['name'] = name;
    _this['description'] = description;
    _this['shortcut1'] = shortcut1;
    _this['shortcut2'] = shortcut2;
  };

  /**
   * Constructs a <code>SegmentTag</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SegmentTag} obj Optional instance to populate.
   * @return {module:model/SegmentTag} The populated <code>SegmentTag</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('shortcut1')) {
        obj['shortcut1'] = ApiClient.convertToType(data['shortcut1'], 'String');
      }
      if (data.hasOwnProperty('shortcut2')) {
        obj['shortcut2'] = ApiClient.convertToType(data['shortcut2'], 'String');
      }
    }
    return obj;
  }

  /**
   * セグメントタグID
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * セグメントタグ
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * 備考
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * ショートカット１ (20文字以内)
   * @member {String} shortcut1
   */
  exports.prototype['shortcut1'] = undefined;
  /**
   * ショートカット２ (20文字以内)
   * @member {String} shortcut2
   */
  exports.prototype['shortcut2'] = undefined;



  return exports;
}));


