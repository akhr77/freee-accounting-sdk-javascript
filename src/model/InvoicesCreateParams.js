/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InvoicesCreateParamsInvoiceContents'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InvoicesCreateParamsInvoiceContents'));
  } else {
    // Browser globals (root is window)
    if (!root.FreeeAccountingClient) {
      root.FreeeAccountingClient = {};
    }
    root.FreeeAccountingClient.InvoicesCreateParams = factory(root.FreeeAccountingClient.ApiClient, root.FreeeAccountingClient.InvoicesCreateParamsInvoiceContents);
  }
}(this, function(ApiClient, InvoicesCreateParamsInvoiceContents) {
  'use strict';




  /**
   * The InvoicesCreateParams model module.
   * @module model/InvoicesCreateParams
   * @version v1.0
   */

  /**
   * Constructs a new <code>InvoicesCreateParams</code>.
   * @alias module:model/InvoicesCreateParams
   * @class
   * @param companyId {Number} 事業所ID
   */
  var exports = function(companyId) {
    var _this = this;

    _this['company_id'] = companyId;

























  };

  /**
   * Constructs a <code>InvoicesCreateParams</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InvoicesCreateParams} obj Optional instance to populate.
   * @return {module:model/InvoicesCreateParams} The populated <code>InvoicesCreateParams</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('company_id')) {
        obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
      }
      if (data.hasOwnProperty('issue_date')) {
        obj['issue_date'] = ApiClient.convertToType(data['issue_date'], 'String');
      }
      if (data.hasOwnProperty('partner_id')) {
        obj['partner_id'] = ApiClient.convertToType(data['partner_id'], 'Number');
      }
      if (data.hasOwnProperty('invoice_number')) {
        obj['invoice_number'] = ApiClient.convertToType(data['invoice_number'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('due_date')) {
        obj['due_date'] = ApiClient.convertToType(data['due_date'], 'String');
      }
      if (data.hasOwnProperty('booking_date')) {
        obj['booking_date'] = ApiClient.convertToType(data['booking_date'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('invoice_status')) {
        obj['invoice_status'] = ApiClient.convertToType(data['invoice_status'], 'String');
      }
      if (data.hasOwnProperty('partner_name')) {
        obj['partner_name'] = ApiClient.convertToType(data['partner_name'], 'String');
      }
      if (data.hasOwnProperty('partner_title')) {
        obj['partner_title'] = ApiClient.convertToType(data['partner_title'], 'String');
      }
      if (data.hasOwnProperty('partner_contact_info')) {
        obj['partner_contact_info'] = ApiClient.convertToType(data['partner_contact_info'], 'String');
      }
      if (data.hasOwnProperty('company_name')) {
        obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
      }
      if (data.hasOwnProperty('company_zipcode')) {
        obj['company_zipcode'] = ApiClient.convertToType(data['company_zipcode'], 'String');
      }
      if (data.hasOwnProperty('company_prefecture_code')) {
        obj['company_prefecture_code'] = ApiClient.convertToType(data['company_prefecture_code'], 'Number');
      }
      if (data.hasOwnProperty('company_address1')) {
        obj['company_address1'] = ApiClient.convertToType(data['company_address1'], 'String');
      }
      if (data.hasOwnProperty('company_address2')) {
        obj['company_address2'] = ApiClient.convertToType(data['company_address2'], 'String');
      }
      if (data.hasOwnProperty('company_contact_info')) {
        obj['company_contact_info'] = ApiClient.convertToType(data['company_contact_info'], 'String');
      }
      if (data.hasOwnProperty('payment_type')) {
        obj['payment_type'] = ApiClient.convertToType(data['payment_type'], 'String');
      }
      if (data.hasOwnProperty('payment_bank_info')) {
        obj['payment_bank_info'] = ApiClient.convertToType(data['payment_bank_info'], 'String');
      }
      if (data.hasOwnProperty('use_virtual_transfer_account')) {
        obj['use_virtual_transfer_account'] = ApiClient.convertToType(data['use_virtual_transfer_account'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('notes')) {
        obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
      }
      if (data.hasOwnProperty('invoice_layout')) {
        obj['invoice_layout'] = ApiClient.convertToType(data['invoice_layout'], 'String');
      }
      if (data.hasOwnProperty('tax_entry_method')) {
        obj['tax_entry_method'] = ApiClient.convertToType(data['tax_entry_method'], 'String');
      }
      if (data.hasOwnProperty('invoice_contents')) {
        obj['invoice_contents'] = ApiClient.convertToType(data['invoice_contents'], [InvoicesCreateParamsInvoiceContents]);
      }
    }
    return obj;
  }

  /**
   * 事業所ID
   * @member {Number} company_id
   */
  exports.prototype['company_id'] = undefined;
  /**
   * 請求日 (yyyy-mm-dd)
   * @member {String} issue_date
   */
  exports.prototype['issue_date'] = undefined;
  /**
   * 取引先ID
   * @member {Number} partner_id
   */
  exports.prototype['partner_id'] = undefined;
  /**
   * 請求書番号 (デフォルト: 自動採番されます)
   * @member {String} invoice_number
   */
  exports.prototype['invoice_number'] = undefined;
  /**
   * タイトル (デフォルト: 請求書)
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * 期日 (yyyy-mm-dd)
   * @member {String} due_date
   */
  exports.prototype['due_date'] = undefined;
  /**
   * 売上計上日
   * @member {String} booking_date
   */
  exports.prototype['booking_date'] = undefined;
  /**
   * 概要
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * 請求書ステータス  (draft: 下書き (デフォルト), issue: 発行(請求先WFを利用している場合はWFに乗ります))
   * @member {module:model/InvoicesCreateParams.InvoiceStatusEnum} invoice_status
   */
  exports.prototype['invoice_status'] = undefined;
  /**
   * 取引先名
   * @member {String} partner_name
   */
  exports.prototype['partner_name'] = undefined;
  /**
   * 敬称（御中、様、(空白)の3つから選択）
   * @member {module:model/InvoicesCreateParams.PartnerTitleEnum} partner_title
   */
  exports.prototype['partner_title'] = undefined;
  /**
   * 取引先担当者名
   * @member {String} partner_contact_info
   */
  exports.prototype['partner_contact_info'] = undefined;
  /**
   * 事業所名 (デフォルトは事業所設定情報が補完されます)
   * @member {String} company_name
   */
  exports.prototype['company_name'] = undefined;
  /**
   * 郵便番号 (デフォルトは事業所設定情報が補完されます)
   * @member {String} company_zipcode
   */
  exports.prototype['company_zipcode'] = undefined;
  /**
   * 都道府県コード（0:北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄 ) (デフォルトは事業所設定情報が補完されます)
   * @member {Number} company_prefecture_code
   */
  exports.prototype['company_prefecture_code'] = undefined;
  /**
   * 市区町村・番地 (デフォルトは事業所設定情報が補完されます)
   * @member {String} company_address1
   */
  exports.prototype['company_address1'] = undefined;
  /**
   * 建物名・部屋番号など (デフォルトは事業所設定情報が補完されます)
   * @member {String} company_address2
   */
  exports.prototype['company_address2'] = undefined;
  /**
   * 事業所担当者名 (デフォルトは事業所設定情報が補完されます)
   * @member {String} company_contact_info
   */
  exports.prototype['company_contact_info'] = undefined;
  /**
   * 支払方法 (振込: transfer, 引き落とし: direct_debit)
   * @member {module:model/InvoicesCreateParams.PaymentTypeEnum} payment_type
   */
  exports.prototype['payment_type'] = undefined;
  /**
   * 支払口座
   * @member {String} payment_bank_info
   */
  exports.prototype['payment_bank_info'] = undefined;
  /**
   * 振込専用口座の利用(利用しない: not_use(デフォルト), 利用する: use)
   * @member {module:model/InvoicesCreateParams.UseVirtualTransferAccountEnum} use_virtual_transfer_account
   */
  exports.prototype['use_virtual_transfer_account'] = undefined;
  /**
   * メッセージ (デフォルト: 下記の通りご請求申し上げます。)
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * 備考
   * @member {String} notes
   */
  exports.prototype['notes'] = undefined;
  /**
   * レイアウト(default_classic: レイアウト１/クラシック (デフォルト), standard_classic: レイアウト２/クラシック, envelope_classic: 封筒１/クラシック, carried_forward_standard_classic: レイアウト３（繰越金額欄あり）/クラシック, carried_forward_envelope_classic: 封筒２（繰越金額欄あり）/クラシック, default_modern: レイアウト１/モダン, standard_modern: レイアウト２/モダン, envelope_modern: 封筒/モダン)
   * @member {module:model/InvoicesCreateParams.InvoiceLayoutEnum} invoice_layout
   */
  exports.prototype['invoice_layout'] = undefined;
  /**
   * 請求書の消費税計算方法(inclusive: 内税表示 (デフォルト), exclusive: 外税表示)
   * @member {module:model/InvoicesCreateParams.TaxEntryMethodEnum} tax_entry_method
   */
  exports.prototype['tax_entry_method'] = undefined;
  /**
   * 請求内容
   * @member {Array.<module:model/InvoicesCreateParamsInvoiceContents>} invoice_contents
   */
  exports.prototype['invoice_contents'] = undefined;


  /**
   * Allowed values for the <code>invoice_status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InvoiceStatusEnum = {
    /**
     * value: "draft"
     * @const
     */
    "draft": "draft",
    /**
     * value: "issue"
     * @const
     */
    "issue": "issue"  };

  /**
   * Allowed values for the <code>partner_title</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PartnerTitleEnum = {
    /**
     * value: "御中"
     * @const
     */
    "御中": "御中",
    /**
     * value: "様"
     * @const
     */
    "様": "様",
    /**
     * value: "(空白)"
     * @const
     */
    "(空白)": "(空白)"  };

  /**
   * Allowed values for the <code>payment_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PaymentTypeEnum = {
    /**
     * value: "transfer"
     * @const
     */
    "transfer": "transfer",
    /**
     * value: "direct_debit"
     * @const
     */
    "direct_debit": "direct_debit"  };

  /**
   * Allowed values for the <code>use_virtual_transfer_account</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UseVirtualTransferAccountEnum = {
    /**
     * value: "not_use"
     * @const
     */
    "not_use": "not_use",
    /**
     * value: "use"
     * @const
     */
    "use": "use"  };

  /**
   * Allowed values for the <code>invoice_layout</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InvoiceLayoutEnum = {
    /**
     * value: "default_classic"
     * @const
     */
    "default_classic": "default_classic",
    /**
     * value: "standard_classic"
     * @const
     */
    "standard_classic": "standard_classic",
    /**
     * value: "envelope_classic"
     * @const
     */
    "envelope_classic": "envelope_classic",
    /**
     * value: "carried_forward_standard_classic"
     * @const
     */
    "carried_forward_standard_classic": "carried_forward_standard_classic",
    /**
     * value: "carried_forward_envelope_classic"
     * @const
     */
    "carried_forward_envelope_classic": "carried_forward_envelope_classic",
    /**
     * value: "default_modern"
     * @const
     */
    "default_modern": "default_modern",
    /**
     * value: "standard_modern"
     * @const
     */
    "standard_modern": "standard_modern",
    /**
     * value: "envelope_modern"
     * @const
     */
    "envelope_modern": "envelope_modern"  };

  /**
   * Allowed values for the <code>tax_entry_method</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TaxEntryMethodEnum = {
    /**
     * value: "inclusive"
     * @const
     */
    "inclusive": "inclusive",
    /**
     * value: "exclusive"
     * @const
     */
    "exclusive": "exclusive"  };


  return exports;
}));


