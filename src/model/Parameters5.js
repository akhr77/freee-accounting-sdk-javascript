/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FreeeAccountingClient) {
      root.FreeeAccountingClient = {};
    }
    root.FreeeAccountingClient.Parameters5 = factory(root.FreeeAccountingClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Parameters5 model module.
   * @module model/Parameters5
   * @version v0.0.2
   */

  /**
   * Constructs a new <code>Parameters5</code>.
   * @alias module:model/Parameters5
   * @class
   * @param name {String} 口座名
   * @param type {module:model/Parameters5.TypeEnum} 口座種別（bank_account : 銀行口座, credit_card : クレジットカード, wallet : その他の決済口座）
   * @param companyId {Number} 事業所ID
   */
  var exports = function(name, type, companyId) {
    var _this = this;

    _this['name'] = name;
    _this['type'] = type;
    _this['company_id'] = companyId;


  };

  /**
   * Constructs a <code>Parameters5</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Parameters5} obj Optional instance to populate.
   * @return {module:model/Parameters5} The populated <code>Parameters5</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('company_id')) {
        obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
      }
      if (data.hasOwnProperty('bank_id')) {
        obj['bank_id'] = ApiClient.convertToType(data['bank_id'], 'Number');
      }
      if (data.hasOwnProperty('group_name')) {
        obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
      }
    }
    return obj;
  }

  /**
   * 口座名
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * 口座種別（bank_account : 銀行口座, credit_card : クレジットカード, wallet : その他の決済口座）
   * @member {module:model/Parameters5.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * 事業所ID
   * @member {Number} company_id
   */
  exports.prototype['company_id'] = undefined;
  /**
   * サービスID
   * @member {Number} bank_id
   */
  exports.prototype['bank_id'] = undefined;
  /**
   * 決算書表示名（小カテゴリー） 例：売掛金, 受取手形, 未収入金（法人のみ）, 買掛金, 支払手形, 未払金, 預り金, 前受金
   * @member {String} group_name
   */
  exports.prototype['group_name'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "bank_account"
     * @const
     */
    "bank_account": "bank_account",
    /**
     * value: "credit_card"
     * @const
     */
    "credit_card": "credit_card",
    /**
     * value: "wallet"
     * @const
     */
    "wallet": "wallet"  };


  return exports;
}));


