/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountItemParams', 'model/AccountItemsCreateResponse', 'model/AccountItemsIndexResponse', 'model/AccountItemsShowResponse', 'model/AccountItemsUpdateResponse', 'model/BadRequestError', 'model/UnauthorizedError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AccountItemParams'), require('../model/AccountItemsCreateResponse'), require('../model/AccountItemsIndexResponse'), require('../model/AccountItemsShowResponse'), require('../model/AccountItemsUpdateResponse'), require('../model/BadRequestError'), require('../model/UnauthorizedError'));
  } else {
    // Browser globals (root is window)
    if (!root.FreeeAccountingClient) {
      root.FreeeAccountingClient = {};
    }
    root.FreeeAccountingClient.AccountItemsApi = factory(root.FreeeAccountingClient.ApiClient, root.FreeeAccountingClient.AccountItemParams, root.FreeeAccountingClient.AccountItemsCreateResponse, root.FreeeAccountingClient.AccountItemsIndexResponse, root.FreeeAccountingClient.AccountItemsShowResponse, root.FreeeAccountingClient.AccountItemsUpdateResponse, root.FreeeAccountingClient.BadRequestError, root.FreeeAccountingClient.UnauthorizedError);
  }
}(this, function(ApiClient, AccountItemParams, AccountItemsCreateResponse, AccountItemsIndexResponse, AccountItemsShowResponse, AccountItemsUpdateResponse, BadRequestError, UnauthorizedError) {
  'use strict';

  /**
   * AccountItems service.
   * @module api/AccountItemsApi
   * @version v1.0
   */

  /**
   * Constructs a new AccountItemsApi. 
   * @alias module:api/AccountItemsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createAccountItem operation.
     * @callback module:api/AccountItemsApi~createAccountItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountItemsCreateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 勘定科目の作成
     * 
     * @param {module:model/AccountItemParams} parameters 勘定科目の作成
     * @param {module:api/AccountItemsApi~createAccountItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountItemsCreateResponse}
     */
    this.createAccountItem = function(parameters, callback) {
      var postBody = parameters;

      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling createAccountItem");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = AccountItemsCreateResponse;

      return this.apiClient.callApi(
        '/account_items', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAccountItem operation.
     * @callback module:api/AccountItemsApi~getAccountItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountItemsShowResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 勘定科目の詳細情報の取得
     * 
     * @param {Number} companyId 事業所ID
     * @param {Number} id 勘定科目ID
     * @param {module:api/AccountItemsApi~getAccountItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountItemsShowResponse}
     */
    this.getAccountItem = function(companyId, id, callback) {
      var postBody = null;

      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getAccountItem");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAccountItem");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'company_id': companyId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = AccountItemsShowResponse;

      return this.apiClient.callApi(
        '/account_items/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAccountItems operation.
     * @callback module:api/AccountItemsApi~getAccountItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountItemsIndexResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 勘定科目一覧の取得
     * 
     * @param {Number} companyId 事業所ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.baseDate 基準日
     * @param {module:api/AccountItemsApi~getAccountItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountItemsIndexResponse}
     */
    this.getAccountItems = function(companyId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getAccountItems");
      }


      var pathParams = {
      };
      var queryParams = {
        'company_id': companyId,
        'base_date': opts['baseDate'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = AccountItemsIndexResponse;

      return this.apiClient.callApi(
        '/account_items', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccountItem operation.
     * @callback module:api/AccountItemsApi~updateAccountItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountItemsUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 勘定科目の更新
     * 
     * @param {module:model/AccountItemParams} parameters 勘定科目の更新
     * @param {Number} id 
     * @param {module:api/AccountItemsApi~updateAccountItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountItemsUpdateResponse}
     */
    this.updateAccountItem = function(parameters, id, callback) {
      var postBody = parameters;

      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling updateAccountItem");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateAccountItem");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = AccountItemsUpdateResponse;

      return this.apiClient.callApi(
        '/account_items/{id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
