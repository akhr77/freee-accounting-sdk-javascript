/**
 * freee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadRequestError', 'model/CompaniesShowResponse', 'model/CompaniesUpdateResponse', 'model/ERRORUNKNOWN', 'model/Parameters3', 'model/UnauthorizedError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadRequestError'), require('../model/CompaniesShowResponse'), require('../model/CompaniesUpdateResponse'), require('../model/ERRORUNKNOWN'), require('../model/Parameters3'), require('../model/UnauthorizedError'));
  } else {
    // Browser globals (root is window)
    if (!root.FreeeAccountingClient) {
      root.FreeeAccountingClient = {};
    }
    root.FreeeAccountingClient.CompaniesApi = factory(root.FreeeAccountingClient.ApiClient, root.FreeeAccountingClient.BadRequestError, root.FreeeAccountingClient.CompaniesShowResponse, root.FreeeAccountingClient.CompaniesUpdateResponse, root.FreeeAccountingClient.ERRORUNKNOWN, root.FreeeAccountingClient.Parameters3, root.FreeeAccountingClient.UnauthorizedError);
  }
}(this, function(ApiClient, BadRequestError, CompaniesShowResponse, CompaniesUpdateResponse, ERRORUNKNOWN, Parameters3, UnauthorizedError) {
  'use strict';

  /**
   * Companies service.
   * @module api/CompaniesApi
   * @version v0.0.2
   */

  /**
   * Constructs a new CompaniesApi. 
   * @alias module:api/CompaniesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getCompanies operation.
     * @callback module:api/CompaniesApi~getCompaniesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ERRORUNKNOWN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 事業所一覧の取得
     * 
     * @param {module:api/CompaniesApi~getCompaniesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ERRORUNKNOWN}
     */
    this.getCompanies = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = ERRORUNKNOWN;

      return this.apiClient.callApi(
        '/companies', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompany operation.
     * @callback module:api/CompaniesApi~getCompanyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompaniesShowResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 事業所の詳細情報の取得
     * 
     * @param {Number} id 事業所ID
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.details 取得情報に勘定科目・税区分コード・税区分・品目・取引先・部門・メモタグ・口座の一覧を含める
     * @param {Boolean} opts.accountItems 取得情報に勘定科目一覧を含める
     * @param {Boolean} opts.taxes 取得情報に税区分コード・税区分一覧を含める
     * @param {Boolean} opts.items 取得情報に品目一覧を含める
     * @param {Boolean} opts.partners 取得情報に取引先一覧を含める
     * @param {Boolean} opts.sections 取得情報に部門一覧を含める
     * @param {Boolean} opts.tags 取得情報にメモタグ一覧を含める
     * @param {Boolean} opts.walletables 取得情報に口座一覧を含める
     * @param {module:api/CompaniesApi~getCompanyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompaniesShowResponse}
     */
    this.getCompany = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getCompany");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'details': opts['details'],
        'account_items': opts['accountItems'],
        'taxes': opts['taxes'],
        'items': opts['items'],
        'partners': opts['partners'],
        'sections': opts['sections'],
        'tags': opts['tags'],
        'walletables': opts['walletables'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = CompaniesShowResponse;

      return this.apiClient.callApi(
        '/companies/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCompany operation.
     * @callback module:api/CompaniesApi~updateCompanyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompaniesUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 事業所情報の更新
     * 
     * @param {Number} id 事業所ID
     * @param {Object} opts Optional parameters
     * @param {module:model/Parameters3} opts.parameters 
     * @param {module:api/CompaniesApi~updateCompanyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompaniesUpdateResponse}
     */
    this.updateCompany = function(id, opts, callback) {
      opts = opts || {};
      var postBody = opts['parameters'];

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateCompany");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = CompaniesUpdateResponse;

      return this.apiClient.callApi(
        '/companies/{id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
